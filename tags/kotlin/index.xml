<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>kotlin on Bruno Henriques's Digital Garden ðŸŒ±</title><link>https://bphenriques.github.io/knowledge-base/tags/kotlin/</link><description>Recent content in kotlin on Bruno Henriques's Digital Garden ðŸŒ±</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://bphenriques.github.io/knowledge-base/tags/kotlin/index.xml" rel="self" type="application/rss+xml"/><item><title>Kotlin</title><link>https://bphenriques.github.io/knowledge-base/notes/kotlin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bphenriques.github.io/knowledge-base/notes/kotlin/</guid><description>Asserting asynchronous task # Sometimes CountdownLatch is not feasible as it is not possible to inject it. The alternative pool until the system reaches the desired state. This approach is not ideal as it may block the system longer than strictly required.
As mid-term solution, in any-case opt for CountdownLatch if possible.
fun assertWaitFor(timeoutMs: Long = 5000, intervalMs: Long = 250, fn: () -&amp;gt; Unit) { val start = Instant.</description></item></channel></rss>