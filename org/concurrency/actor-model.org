#+SETUPFILE: ./_index.org
#+ROAM_TAGS: concurrency
#+TITLE: Actor Model

In the context of Reactive Systems, Actor model is a reactive tool, a paradigm that:
- Message driven - All communication between actors is done with async non-blocking messages.
- Abstractions provide elasticity and resiliency.

Akka uses the actor model - https://doc.akka.io/docs/akka/current/typed/guide/actors-intro.html?language=scala

* Fundamental

- All computation occurs inside of the actor.
- Each actor has an address.
- Actors only communicate through asyncronous messages.

The message driven system provides location transparency, i.e., the technique remainins the same regardless of where the actors are. This allows better resiliency and elastic (hmm.. questions on this bit). This is different from "Transparent remoting" as this hides potential networking issues while making it seem like local calls. Location transparency makes the opposite which is makes local calls seem like remote calls, therefore whoever uses is aware that there are potential failures.
