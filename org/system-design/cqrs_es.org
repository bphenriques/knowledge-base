#+SETUPFILE: ./_index.org
#+ROAM_TAGS: system-design
#+ROAM_ALIAS:
#+TITLE: CQRS/ES

CQRS/ES stands for Command Query Responsibility Segregation and Event Sourcing.

Use Cases:
- Auditing (e.g., banking, accounting)
- High Scalability
- High Resiliency

There are trade-offs, what are they?

* CQRS

State Based Persistence. Every time an update is applied to the database it obliterates previous state.

- Can't fix bad state due to previous error.
- Can't retroactively apply new domain insights (because we do not have the previous states).

This solely tells where we are but not how we got there: must be allied with [[file:event_sourcing.org][Event Sourcing]].
