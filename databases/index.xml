<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Databases on Bruno Henriques</title><link>https://bphenriques.github.io/knowledge-base/databases/</link><description>Recent content in Databases on Bruno Henriques</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://bphenriques.github.io/knowledge-base/databases/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>https://bphenriques.github.io/knowledge-base/databases/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bphenriques.github.io/knowledge-base/databases/overview/</guid><description>https://medium.com/@rakyll/things-i-wished-more-developers-knew-about-databases-2d0178464f78</description></item><item><title>Sharding or Partitioning</title><link>https://bphenriques.github.io/knowledge-base/databases/databases_sharding-or-partitioning/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bphenriques.github.io/knowledge-base/databases/databases_sharding-or-partitioning/</guid><description>Technique used by some data stores to reduce contention without sacrificing consistency.
Records are distributed across nodes using a Shard Key or a Partition Key that will be used by the Database Router that redirects requests to the correct shard/partition.
Benefits:
Contention is isolated to a shard/partition. Given that each shard stores a part of the dataset, it is only handling a small part of the overall load. Improves elasticity.</description></item></channel></rss>