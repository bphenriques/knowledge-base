<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>nix on Bruno Henriques's Digital Garden ðŸŒ±</title><link>https://bphenriques.github.io/knowledge-base/tags/nix/</link><description>Recent content in nix on Bruno Henriques's Digital Garden ðŸŒ±</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://bphenriques.github.io/knowledge-base/tags/nix/index.xml" rel="self" type="application/rss+xml"/><item><title>Nix</title><link>https://bphenriques.github.io/knowledge-base/notes/nix/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bphenriques.github.io/knowledge-base/notes/nix/</guid><description>Nix is a declarative language aiming produce reproducible systems. In can be used to produce dotfiles.
Follows three tools:
Home Manager : Manages user&amp;rsquo;s home. It can&amp;rsquo;t be used to install fonts for example. Nix Darwin : Manages macOS systems. The goal is to compose these tools to produce a reproducible generation of one&amp;rsquo;s environment. To aid this, Nix Flakes introduces another layer on top that aims to pin the versions the dependencies through a flake.</description></item></channel></rss>